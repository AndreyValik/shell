#Makefile для построения исполняемого файла из исходников
#используется командой make, можно просто набрать make в терминале находясь в каталоге с Makefile и выполнится сборка того что в нем написано 
#в eclipse в окне build target можно просто создать 'new target' и в имени написать 'all' - выполниться цель all описанная ниже
 
#Переменная содежращая имя собираемого исполняемого файла, назвать переменную можно как угодно
#применять потом вот так  $(TARGET)
#Заводить переменные для какихто значений необходимо если это значение будет применяться несколько раз, 
#чтобы если надо будет его изменить, то менять только в одном месте - в месте присвоения переменной 
TARGET = shell

#Цель сборки по умолчанию, быдет выполняться по команде 'make' или 'make all'
#синтаксис написания простой - сначала указывается имя цели(будет задаваться при вызове команды make в качестве аргумента), 
#потом через двоеточие от чего эта цель зависит, потом в следующих строках команды сборки
#если команд сборки нет(как в данном случае), то make проследит чтобы были собраны зависимости указанные после двоеточия 
#прописано что 'all' зависит от переменной TARGET которая содержит имя собираемого бинарника
#фактически означает что чтобы собрать 'all' надо сначала собрать shell 
all: $(TARGET)

#Переменная содержащая список файлов с исходными текстами
SOURCES = newstage2.c 

#Переменная содержащая список заголовочных файлов
HEADERS =  

#Собственно сборка бинарника shell
#Зависит от исходников и заголовочных файлов, дальше указывается как собрать, строка сборки обязательно должна начинаться с табуляции
#строк сборки может быть несколько
$(TARGET): $(SOURCES)
	gcc -g -std=c99 $(SOURCES) -o $(TARGET)
#ключ '-g' указывает что собираться с отладочной информацией, чтобы можно было запустить отладчик
#ключ '-std=c99' указывает что использовать режим компилятора C99, 
# иначе на какихто версиях gcc может не давать определять переменные внутри цикла вота так 'for (int j = 0; j < n_arg; j++)'
  
	
#Цель описывающая как удалять результаты сборки, фактически тут удяляем собранный бинарник имя которого задано в переменной $(TARGET)
#не зависит ни от чего, поэтому после двоеточия пусто
clean:
	rm -vf $(TARGET)
